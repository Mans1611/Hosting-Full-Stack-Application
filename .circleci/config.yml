version: 2.1
orbs:
  
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
 
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:14.15"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '14.15'  
      - eb/setup       
      - checkout
    # install front end dependencies 
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      # install server dependencies 
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      # build the front end 
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
    
    # build the server end 
      - run:
          name: API Build
          command: |
            npm run api:build
       # setting the envirounment variables 
      - run:
          name: Send Environment Variables To EB
          command: |
            cd udagram/udagram-api && eb use udagram-api-dev
            cd udagram/udagram-api && eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            cd udagram/udagram-api && eb setenv AWS_BUCKET=$AWS_BUCKET
            cd udagram/udagram-api && eb setenv AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
            cd udagram/udagram-api && eb setenv AWS_REGION=$AWS_REGION
            cd udagram/udagram-api && eb setenv AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            cd udagram/udagram-api && eb setenv DB_PORT=$DB_PORT
            cd udagram/udagram-api && eb setenv JWT_SECRET=$JWT_SECRET
            cd udagram/udagram-api && eb setenv POSTGRES_DB=$POSTGRES_DB
            cd udagram/udagram-api && eb setenv POSTGRES_HOST=$POSTGRES_HOST
            cd udagram/udagram-api && eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            cd udagram/udagram-api && eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME
     
      
      

  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      
      # deploy the front end to s3 
      - run:
          name: Deploy Front-End
          command: |
            npm run frontend:deploy
     
     # deploy the server to EB 
      - run:
          name: Deploy API
          command: |
            npm run api:deploy
      # deploy the full app
      - run:
          name: Deploy App
          command: |
            npm run deploy
      
            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
                
          type: approval
          requires:
            - build

      - deploy:
          
          requires:
            - hold
